Rest : ...rest 
As the name suggests it copies the rest of the variables into it and stores itself as an array.
The dots literally mean “gather the remaining parameters into an array”.
function sumAll(...args) { // args is the name for the array
  let sum = 0;
for (let arg of args) sum += arg;
return sum;
}

alert( sumAll(1) ); // 1
alert( sumAll(1, 2) ); // 3
alert( sumAll(1, 2, 3) ); // 6
They appear in function definition and in array/object destructuring

Spread:
to convert an iterable to list of parameters, it spreads the values
let arr = [3, 5, 1];
alert( Math.max(arr) ); // NaN
When ...arr is used in the function call, it “expands” an iterable object arr into the list of arguments.
alert( Math.max(...arr) ); // 5 (spread turns array into a list of arguments)
the spread syntax can be used to merge arrays:
let arr = [3, 5, 1];
let arr2 = [8, 9, 15];
let merged = [0, ...arr, 2, ...arr2];
The spread syntax to turn the string into array of characters:
let str = "Hello";
alert( [...str] ); // H,e,l,l,o

Copying one array into another
let arr = [1, 2, 3];
let arrCopy = [...arr]; // spread the array into a list of parameters
                        // then put the result into a new array
Object copying
let obj = { a: 1, b: 2, c: 3 };

let objCopy = { ...obj }; // spread the object into a list of parameters
                          // then return the result in a new object

When we see "..." in the code, it is either rest parameters or the spread syntax.
There’s an easy way to distinguish between them:

When ... is at the end of function parameters, it’s “rest parameters” and gathers the rest of the list of arguments into an array.
When ... occurs in a function call or alike, it’s called a “spread syntax” and expands an array into a list.

Use case:
Rest parameters are used to create functions that accept any number of arguments.
The spread syntax is used to pass an array to functions that normally require a list of many arguments.